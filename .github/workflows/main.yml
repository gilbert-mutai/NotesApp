name: NotesApp CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # ==========================
  # TEST STAGE 
  # ==========================
  test:
    name: Run Tests
    runs-on: ubuntu-latest
  
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
  
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
  
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
  
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: Run Tests
        env:
          DJANGO_SETTINGS_MODULE: mynotes.settings
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: localhost  # This still points to the service container
        run: |
          pytest


          
  # ==========================
  # BUILD & PUSH STAGE
  # ==========================
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test  # Only runs if tests pass

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notesapp:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/notesapp:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/notesapp:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/notesapp:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/notesapp:latest

  # ==========================
  # DEPLOY STAGE
  # ==========================
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build  # Runs only after build succeeds

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/notesapp
            docker-compose pull
            docker-compose up -d
