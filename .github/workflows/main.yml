name: NotesApp CI/CD Pipeline

on:
  push:
    branches: [ "master" ]

jobs:
  # ==========================
  # TEST STAGE
  # ==========================
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest
          
  # ==========================
  # BUILD & PUSH STAGE
  # ==========================
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test  # Only runs if tests pass

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notesapp:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/notesapp:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/notesapp:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/notesapp:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/notesapp:latest

  # ==========================
  # DEPLOY STAGE
  # ==========================
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build  # Runs only after build succeeds

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/notesapp
            docker-compose pull
            docker-compose up -d
